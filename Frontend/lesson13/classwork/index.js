// методы массивов part2 

// push() - мутирующий, добавляет элемент в конец. Возвращает число элементов нового массива
// pop () - мутирующий, удаляет последний элемент. Возвращает сам удаленный элемент
// shift() - мутирующий. удаляет ПЕРВЫЙ элемент. Возвращает удаленное значение.
// unshift() - мутирующий, добавляет элемент в НАЧАЛО массива.  Возвращает число элементов нового массива

// .forEach() - мутирующий. Возвращает undefind
 

// .map() - не мутирующий. Возвращает новый массив элементов исходного массива.
// .filter() - не мутирующий. Возвращает новый массив элементов исходного массива.
// .reduce() - не мутирующий. Возвращает переменную с последовательной обработки элементов массива
// .find() не мутирующий - Возвращает первый элемент удовлетворяющий условию. 





// * 1. метод slice() -- (и для массивов и для строк)

// не мутирующий, возвращает новый массив элементов
// принимает два параметра:

// 1. индекс элемента с которого отрезает (ВКЛЮЧИТЕЛЬНО)
// 2. индекс элемента до которого отрезает (НЕ ВКЛЮЧИТЕЛЬНО)

const names = ['Frodo', 'Sam', 'Pipin', 'Merry', 'Boromir', 'Faramir']

// три первых
const namesSliced = names.slice(0, 3)

// два в середине
const merryPipin = names.slice(2, 4)

console.log(merryPipin)

// два последних с конца

const lastTwo = names.slice(-2, names.length)

console.log(lastTwo)

// все кроме двух последних

const withoutLast = names.slice(0, -2)

console.log(withoutLast)

// * метод splice() -- (для массивов)
// мутирующий метод
// принимает два параметра:
// 1. индекс откуда
// 2. кол-во всех вырезаемых элементов

// ! если не указать второй параметр, то удалятся все элементы начиная с указанного индекса (ВКЛЮЧИТЕЛЬНО)

// console.log(names)
// names.splice(2, 2)
// console.log(names)

console.log(names)

// так удалили 2 элемента: Сэма и Пипина

// names.splice(1, 2)

// console.log(names)

// names.splice(4, 2)

// c минусовым значением можно удалять элементы с конца

// names.splice(-3)

console.log(names)

// * метод sort()
// сортирует элементы массива, по умолчанию работает с элементами как со строками
// мутирующий метод, сортирует исходный массив + возвращает новый массив отсортированных элементов
// для приведения в единый регистр вы можете использовать методы .toUpperCase() (верхний регистр) и .toLowerCase() (нижний регистр)
// при сортировке больший приоритет у заглавных букв

// names.sort()

console.log(names.sort())
console.log(names)

// сортировка в алфавитном порядке + расстановка элементов массива с первого по последний
// получился порядок обратный алфавитному
console.log(names.sort().reverse())

// * sort() для чисел
// числа по умолчанию сортируются как строки
// чтобы sort() работал корректно ему нужно передать функцию сортировки

const numbers = [4, 7, 100, 99, 1, 3, 9, 22]

// сортировка с меньшего до большего числа
console.log(numbers.sort((a, b) => a - b))

// сортировка с большего до меньшего
console.log(numbers.sort((a, b) => b - a))

// * join()
// объединяет элементы массива в строку
// принимает параметр-разделитель, строковое значение

// console.log(names)

// console.log(names.join(' и еще этот '))

// * split
// не мутирующий метод для строк
// вы передаете разделитель строку аргументом
// возвращает новый массив

let heroes = 'Sam, Pipin, Merry, Faramir, Boromir, Tom Bombadil'
let sauron = 'Sauron'

const heroesArr = heroes.split(', ')

console.log(heroesArr)

let reveredStr = heroes.split(', ').reverse().join(', ')

console.log(reveredStr)

// перевернули саурона задом наперед
let reversedSauron = sauron.toLowerCase().split(``).reverse().join(``)

console.log(reversedSauron)

// * slice() работает для строк
// первый параметр - индекс с которого мы вырезаем (ВКЛЮЧИТЕЛЬНО)
// второй параметр - индекс по который вырезаем (НЕ ВКЛЮЧИТЕЛЬНО)

console.log(heroes)

const newHeroes = heroes.slice(0, -5)

console.log(newHeroes)